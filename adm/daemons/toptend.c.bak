// toptend.c
// 借鉴及修改by worm 
// 只排名前10名，但记录前12名，避免玩家自杀或技能下降等情况下，第十一位可以及时补上。
//modified by bsd, 完善了top榜的内容.make it more perfect. :)

#define TOPTEN_SPEAR            "topten/spear.txt"
#define TOPTEN_LIT		"/topten/literate.txt"
#define TOPTEN_UNARMED          "/topten/unarmed.txt"
#define TOPTEN_DODGE		"/topten/dodge.txt"
#define TOPTEN_SWORD    	"/topten/sword.txt"
#define TOPTEN_BLADE    	"/topten/blade.txt"
#define LIT_B			CYN"十大"HIM"博学鸿儒"NOR
#define UNARMED_B       	CYN"十大"HIC"神拳无敌"NOR
#define DODGE_B         	CYN"十大"BLU"轻功高手"NOR
#define SWORD_B         	CYN"江湖十大"RED"剑客"NOR
#define BLADE_B         	CYN"江湖十大"GRN"刀客"NOR
#define SPEAR_B         	CYN"江湖十大"HIM"锤客"NOR

#include <ansi.h>
#include <mudlib.h>


void topten_checkplayer(object);
int get_all_data(object,string);
int topten_del(string,string);
int topten_add(object,string);
int topten_save(string,string,string);
string topten_query(string);
string query_type();

void topten_checkplayer(object player)
{
        topten_add(player,"rich");
        topten_add(player,"pker");
        topten_add(player,"exp");
        topten_add(player,"sword");
        topten_add(player,"unarmed");
        topten_add(player,"literate");
        topten_add(player,"blade");
        topten_add(player,"spear");
        topten_add(player,"dodge");

        return;
}

string query_type()
{
		return HIY+CHINESE_MUD_NAME+"现在有以下几种排行榜\n"+
		    	HIR"一：\t"NOR+RICH_B+"\n"+
                        HIR"二：\t"NOR+PKER_B+"\n"+
			HIR"三：\t"NOR+EXP_B+"\n"+
			HIR"四：\t"NOR+SWORD_B+"\n"+
			HIR"五：\t"NOR+UNARMED_B+"\n"+
			HIR"六：\t"NOR+LIT_B+"\n"+
			HIR"七：\t"NOR+BLADE_B+"\n"+
			HIR"八：\t"NOR+DODGE_B+"\n"+
		NOR;
}
		      
int topten_save(string f_name,string b_name,string str)
{
        string *astr;
        int i;
        astr=explode(str,"\n");
        str="";
        for(i=0;i<sizeof(astr)&&i<12;i++)
                str+=astr[i]+"\n";
        if(!write_file(f_name,str,1))
                return notify_fail("无法写文件"+f_name+"，权限不够!不能更新"+b_name+"!\n");
        return 1;
}

string topten_query(string type)
{
        string b_name,f_name,str,*astr,*bstr,name,id;
        int i,j,data;
        switch(type)
        {
                case "rich":
			b_name=RICH_B;
                        f_name=TOPTEN_RICH;
                        break;
                case "pker":
                        b_name=PKER_B;
			f_name=TOPTEN_PKER;
                        break;
                case "exp":
			b_name=EXP_B;
                        f_name=TOPTEN_EXP;
                        break;
                case "sword":
                        b_name=SWORD_B;
			f_name=TOPTEN_SWORD;
                        break;
                case "unarmed":
			b_name=UNARMED_B;
                        f_name=TOPTEN_UNARMED;
                        break;
                case "literate":
			b_name=LIT_B;
                        f_name=TOPTEN_LIT;
                        break;
                case "blade":
			b_name=BLADE_B;
                        f_name=TOPTEN_BLADE;
                        break;
                case "spear":
			b_name=SPEAR_B;
                        f_name=TOPTEN_SPEAR;
                        break;
                case "dodge":
			b_name=DODGE_B;
                        f_name=TOPTEN_DODGE;
                        break;
                default:
                        return 0;
        }
        if(file_size(f_name)==-1)
                return b_name+"的数据文件还没有创建！\n";
        astr=explode(read_file(f_name),"\n");
        str="";
        for(i=0;i<sizeof(astr)&&i<10;i++)
        {
                bstr=explode(astr[i],";");
                str+=HIC"第"+chinese_number(i+1)+"名："HIW;
                for(j=0;j<sizeof(bstr);j++)
                {
                        if(sscanf(bstr[j],"%s(%s)%d",name,id,data)!=3)
                                return "数据错误!文件："+f_name+"第"+i+"行第"+j+"项！\n"+
                                        "该行数据："+bstr[j]+"\n";
                        str+=name+"("+id+")\t";
                }
                str+="\n"NOR;
        }
        return str;
}
int get_all_data(object player,string type)
{
        int total;
        switch(type)
        {
                case "rich":
                        total=(int)player->query("deposit");
                        break;
                case "pker":
                        total=(int)player->query("PKS");
                        break;
                case "exp":
                        total=(int)player->query("combat_exp");
                        break;
                case "sword":
                        total=(int)player->query_skill("sword");
                        break;
                case "unarmed":
                        total=(int)player->query_skill("unarmed");
                        break;
                case "literate":
                        total=(int)player->query_skill("literate");
                        break;
                case "blade":
                        total=(int)player->query_skill("blade");
                        break;
                case "dodge":
                        total=(int)player->query_skill("dodge");
                        break;
                default:
                        total=-1;//用-1标志类型出错！
        }
        return total;
}

int topten_del(string pid,string type)
{
          string str,*astr,*bstr,b_name,f_name;
          int i,j,k;
        switch(type)
        {
                case "rich":
			b_name=RICH_B;
                        f_name=TOPTEN_RICH;
                        break;
                case "pker":
                        b_name=PKER_B;
			f_name=TOPTEN_PKER;
                        break;
                case "exp":
			b_name=EXP_B;
                        f_name=TOPTEN_EXP;
                        break;
                case "sword":
                        b_name=SWORD_B;
			f_name=TOPTEN_SWORD;
                        break;
                case "unarmed":
                        b_name=UNARMED_B;
                        f_name=TOPTEN_UNARMED;
                        break;
                case "literate":
			b_name=LIT_B;
                        f_name=TOPTEN_LIT;
                        break;
                case "blade":
			b_name=BLADE_B;
                        f_name=TOPTEN_BLADE;
                        break;
                case "spear":
			b_name=SPEAR_B;
                        f_name=TOPTEN_SPEAR;
                        break;
                case "dodge":
			b_name=DODGE_B;
                        f_name=TOPTEN_DODGE;
                        break;
                default:
                        return notify_fail("没有"+type+"这种排行榜！\n");
        }
        if(file_size(f_name)==-1)
                return notify_fail(b_name+"还没有创建！\n");
        str=read_file(f_name);
        astr=explode(str,"\n");
        for(i=0;i<sizeof(astr);i++)
        {
                if(strsrch(astr[i],pid)!=-1)//该行包括id则为真
                {
                        if(strsrch(astr[i],";")==-1)
                        //为真表示该行只有一个id，即pid
                        {
                                str="";
                                for(j=0;j<sizeof(astr);j++)
                                        if(j!=i)
                                                str+=astr[j]+"\n";
                                return topten_save(f_name,b_name,str);
                        }
                        else
                        {
                                bstr=explode(astr[i],";");
                                for(j=0;j<sizeof(bstr);j++)
                                        if(strsrch(bstr[j],pid)!=-1)//说明该项即pid,应该去除
                                        {
                                                astr[i]="";
                                                for(k=0;k<sizeof(bstr);k++)
                                                        if(k!=j)
                                                        {
                                                                if((k+1)!=sizeof(bstr)
                                                                        &&!((j+1)==sizeof(bstr)&&j==(k+1))
                                                                )
                                                                        astr[i]+=bstr[k]+";";
                                                                else
                                                                        astr[i]+=bstr[k];
                                                        }
                                                //本来去除后j的循环应该停止,但是不影响结果
                                        }
                                str=implode(astr,"\n");
                                return topten_save(f_name,b_name,str);
                        }
                }
        }
        return 1;
}

int topten_add(object player,string type)
{
          string str,name,id,b_name,f_name;
        string *astr;
        int i,j,data;
        switch(type)
        {
                case "rich":
			b_name=RICH_B;
                        f_name=TOPTEN_RICH;
                        break;
                case "pker":
                        b_name=PKER_B;
			f_name=TOPTEN_PKER;
                        break;
                case "exp":
                        b_name=EXP_B;
                        f_name=TOPTEN_EXP;
                        break;
                case "sword":
                        b_name=SWORD_B;
			f_name=TOPTEN_SWORD;
                        break;
                case "unarmed":
                        b_name=UNARMED_B;
                        f_name=TOPTEN_UNARMED;
                        break;
                case "literate":
			b_name=LIT_B;
                        f_name=TOPTEN_LIT;
                        break;
                case "blade":
			b_name=BLADE_B;
                        f_name=TOPTEN_BLADE;
                        break;
                case "spear":
			b_name=SPEAR_B;
                        f_name=TOPTEN_SPEAR;
                        break;
                case "dodge":
			b_name=DODGE_B;
                        f_name=TOPTEN_DODGE;
                        break;
                default:
                        return notify_fail("没有"+type+"这种排行榜！\n");
        }
        if(!objectp(player)||!userp(player))
                return 0;


// wizard不参加排名
        if(wizardp(player))
            return 0;





        if(file_size(f_name)==-1)
        {
                str=player->query("name")+"("+player->query("id")+")"+
                        get_all_data(player,type);
                return topten_save(f_name,b_name,str);
        }
        //主要程序！
        if(get_all_data(player,type)==-1)
                return notify_fail("数据查询错误，可能是查询类型错误！\n");
                       
        topten_del(player->query("id"),type);//排除该id
        str=read_file(f_name);
        astr=explode(str,"\n");
        i=0;
 
        while(i<sizeof(astr))
        {
                if(sscanf(astr[i],"%s(%s)%d",name,id,data)!=3)
                        if(sscanf(astr,"%s(%s)%d;%*s",name,id,data)!=3)
                                return notify_fail(b_name+"文件数据错误！\n");
                str="";
                if(data<=(int)get_all_data(player,type))
                {
                        for(j=0;j<sizeof(astr);j++)
                        {
                                if(j==i)
                                        str+=player->query("name")+"("+player->query("id")+")"+
                                                get_all_data(player,type)+"\n";
                                str+=astr[j]+"\n";
                        }
                        return topten_save(f_name,b_name,str);
                }

                i++;
        }
        if(sizeof(astr)<12)
        {
str=implode(astr,"\n")+"\n"+player->query("title")+player->query("nickname")+player->query("name")+"("+player->query("id")+
                        ")"+get_all_data(player,type);
                return topten_save(f_name,b_name,str);
        }
        return 0;
}

